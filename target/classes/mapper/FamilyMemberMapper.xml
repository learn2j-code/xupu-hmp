<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.dlm.hmp.mapper.FamilyMemberMapper" >
  <resultMap id="BaseResultMap" type="com.dlm.hmp.pojo.FamilyMember" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="family_id" property="familyId" jdbcType="INTEGER" />
    <result column="book_id" property="bookId" jdbcType="INTEGER" />
    <result column="volume_id" property="volumeId" jdbcType="INTEGER" />
    <result column="sub_clan_id" property="subClanId" jdbcType="INTEGER" />
    <result column="family_member_code" property="familyMemberCode" jdbcType="VARCHAR" />
    <result column="father_name" property="fatherName" jdbcType="VARCHAR" />
    <result column="spouse_name" property="spouseName" jdbcType="VARCHAR" />
    <result column="father_name_pinyin" property="fatherNamePinyin" jdbcType="VARCHAR" />
    <result column="spouse_name_pinyin" property="spouseNamePinyin" jdbcType="VARCHAR" />
    <result column="rel_keyword" property="relKeyword" jdbcType="VARCHAR" />
    <result column="member_surname" property="memberSurname" jdbcType="VARCHAR" />
    <result column="member_name" property="memberName" jdbcType="VARCHAR" />
    <result column="member_name_pinyin" property="memberNamePinyin" jdbcType="VARCHAR" />
    <result column="member_gender" property="memberGender" jdbcType="INTEGER" />
    <result column="member_detail" property="memberDetail" jdbcType="VARCHAR" />
    <result column="native_place" property="nativePlace" jdbcType="VARCHAR" />
    <result column="member_story" property="memberStory" jdbcType="VARCHAR" />
    <result column="generation_num" property="generationNum" jdbcType="INTEGER" />
    <result column="order_no" property="orderNo" jdbcType="INTEGER" />
    <result column="sec_personal_name" property="secPersonalName" jdbcType="VARCHAR" />
    <result column="mark" property="mark" jdbcType="VARCHAR" />
    <result column="generation_word" property="generationWord" jdbcType="VARCHAR" />
    <result column="birthday_time" property="birthdayTime" jdbcType="VARCHAR" />
    <result column="deathday_time" property="deathdayTime" jdbcType="VARCHAR" />
    <result column="buried_location" property="buriedLocation" jdbcType="VARCHAR" />
    <result column="son" property="son" jdbcType="VARCHAR" />
    <result column="daughter" property="daughter" jdbcType="VARCHAR" />
    <result column="ranking" property="ranking" jdbcType="INTEGER" />
    <result column="pre_relation_list" property="preRelationList" jdbcType="VARCHAR" />
    <result column="post_relation_list" property="postRelationList" jdbcType="VARCHAR" />
    <result column="rel_flag" property="relFlag" jdbcType="INTEGER" />
    <result column="pay_flag" property="payFlag" jdbcType="INTEGER" />
    <result column="audit_flag" property="auditFlag" jdbcType="INTEGER" />
    <result column="sub_family_flag" property="subFamilyFlag" jdbcType="INTEGER" />
    <result column="sub_family_code" property="subFamilyCode" jdbcType="VARCHAR" />
    <result column="household_in_flag" property="householdInFlag" jdbcType="INTEGER" />
    <result column="household_in_time" property="householdInTime" jdbcType="VARCHAR" />
    <result column="source" property="source" jdbcType="INTEGER" />
    <result column="version_source" property="versionSource" jdbcType="INTEGER" />
    <result column="version_id" property="versionId" jdbcType="INTEGER" />
    <result column="version_member_id" property="versionMemberId" jdbcType="INTEGER" />
    <result column="birthdate_type" property="birthdateType" jdbcType="INTEGER" />
    <result column="relative_flag" property="relativeFlag" jdbcType="INTEGER" />
    <result column="address_detail" property="addressDetail" jdbcType="VARCHAR" />
    <result column="adoptout" property="adoptout" jdbcType="INTEGER" />
    <result column="adoptout_detail" property="adoptoutDetail" jdbcType="VARCHAR" />
    <result column="uxorilocal" property="uxorilocal" jdbcType="INTEGER" />
    <result column="uxorilocal_detail" property="uxorilocalDetail" jdbcType="VARCHAR" />
    <result column="soninlaw" property="soninlaw" jdbcType="INTEGER" />
    <result column="soninlaw_detail" property="soninlawDetail" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="to_locate" property="toLocate" jdbcType="INTEGER" />
    <result column="son_num" property="sonNum" jdbcType="INTEGER" />
    <result column="son_num_real" property="sonNumReal" jdbcType="INTEGER" />
    <result column="rel_error_flag" property="relErrorFlag" jdbcType="INTEGER" />
    <result column="son_num_diff" property="sonNumDiff" jdbcType="INTEGER" />
    <result column="already_exist" property="alreadyExist" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, family_id, book_id, volume_id, sub_clan_id, family_member_code, father_name, 
    spouse_name, father_name_pinyin, spouse_name_pinyin, rel_keyword, member_surname, 
    member_name, member_name_pinyin, member_gender, member_detail, native_place, member_story, 
    generation_num, order_no, sec_personal_name, mark, generation_word, birthday_time, 
    deathday_time, buried_location, son, daughter, ranking, pre_relation_list, post_relation_list, 
    rel_flag, pay_flag, audit_flag, sub_family_flag, sub_family_code, household_in_flag, 
    household_in_time, source, version_source, version_id, version_member_id, birthdate_type, 
    relative_flag, address_detail, adoptout, adoptout_detail, uxorilocal, uxorilocal_detail, 
    soninlaw, soninlaw_detail, create_time, update_time, to_locate, son_num, son_num_real, 
    rel_error_flag, son_num_diff, already_exist
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.dlm.hmp.pojo.FamilyMemberExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    from family_member
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from family_member
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from family_member
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.dlm.hmp.pojo.FamilyMember" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into family_member (family_id, book_id, volume_id, 
      sub_clan_id, family_member_code, father_name, 
      spouse_name, father_name_pinyin, spouse_name_pinyin, 
      rel_keyword, member_surname, member_name, 
      member_name_pinyin, member_gender, member_detail, 
      native_place, member_story, generation_num, 
      order_no, sec_personal_name, mark, 
      generation_word, birthday_time, deathday_time, 
      buried_location, son, daughter, 
      ranking, pre_relation_list, post_relation_list, 
      rel_flag, pay_flag, audit_flag, 
      sub_family_flag, sub_family_code, household_in_flag, 
      household_in_time, source, version_source, 
      version_id, version_member_id, birthdate_type, 
      relative_flag, address_detail, adoptout, 
      adoptout_detail, uxorilocal, uxorilocal_detail, 
      soninlaw, soninlaw_detail, create_time, 
      update_time, to_locate, son_num, 
      son_num_real, rel_error_flag, son_num_diff, 
      already_exist)
    values (#{familyId,jdbcType=INTEGER}, #{bookId,jdbcType=INTEGER}, #{volumeId,jdbcType=INTEGER}, 
      #{subClanId,jdbcType=INTEGER}, #{familyMemberCode,jdbcType=VARCHAR}, #{fatherName,jdbcType=VARCHAR}, 
      #{spouseName,jdbcType=VARCHAR}, #{fatherNamePinyin,jdbcType=VARCHAR}, #{spouseNamePinyin,jdbcType=VARCHAR}, 
      #{relKeyword,jdbcType=VARCHAR}, #{memberSurname,jdbcType=VARCHAR}, #{memberName,jdbcType=VARCHAR}, 
      #{memberNamePinyin,jdbcType=VARCHAR}, #{memberGender,jdbcType=INTEGER}, #{memberDetail,jdbcType=VARCHAR}, 
      #{nativePlace,jdbcType=VARCHAR}, #{memberStory,jdbcType=VARCHAR}, #{generationNum,jdbcType=INTEGER}, 
      #{orderNo,jdbcType=INTEGER}, #{secPersonalName,jdbcType=VARCHAR}, #{mark,jdbcType=VARCHAR}, 
      #{generationWord,jdbcType=VARCHAR}, #{birthdayTime,jdbcType=VARCHAR}, #{deathdayTime,jdbcType=VARCHAR}, 
      #{buriedLocation,jdbcType=VARCHAR}, #{son,jdbcType=VARCHAR}, #{daughter,jdbcType=VARCHAR}, 
      #{ranking,jdbcType=INTEGER}, #{preRelationList,jdbcType=VARCHAR}, #{postRelationList,jdbcType=VARCHAR}, 
      #{relFlag,jdbcType=INTEGER}, #{payFlag,jdbcType=INTEGER}, #{auditFlag,jdbcType=INTEGER}, 
      #{subFamilyFlag,jdbcType=INTEGER}, #{subFamilyCode,jdbcType=VARCHAR}, #{householdInFlag,jdbcType=INTEGER}, 
      #{householdInTime,jdbcType=VARCHAR}, #{source,jdbcType=INTEGER}, #{versionSource,jdbcType=INTEGER}, 
      #{versionId,jdbcType=INTEGER}, #{versionMemberId,jdbcType=INTEGER}, #{birthdateType,jdbcType=INTEGER}, 
      #{relativeFlag,jdbcType=INTEGER}, #{addressDetail,jdbcType=VARCHAR}, #{adoptout,jdbcType=INTEGER}, 
      #{adoptoutDetail,jdbcType=VARCHAR}, #{uxorilocal,jdbcType=INTEGER}, #{uxorilocalDetail,jdbcType=VARCHAR}, 
      #{soninlaw,jdbcType=INTEGER}, #{soninlawDetail,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{toLocate,jdbcType=INTEGER}, #{sonNum,jdbcType=INTEGER}, 
      #{sonNumReal,jdbcType=INTEGER}, #{relErrorFlag,jdbcType=INTEGER}, #{sonNumDiff,jdbcType=INTEGER}, 
      #{alreadyExist,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.dlm.hmp.pojo.FamilyMember" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into family_member
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="familyId != null" >
        family_id,
      </if>
      <if test="bookId != null" >
        book_id,
      </if>
      <if test="volumeId != null" >
        volume_id,
      </if>
      <if test="subClanId != null" >
        sub_clan_id,
      </if>
      <if test="familyMemberCode != null" >
        family_member_code,
      </if>
      <if test="fatherName != null" >
        father_name,
      </if>
      <if test="spouseName != null" >
        spouse_name,
      </if>
      <if test="fatherNamePinyin != null" >
        father_name_pinyin,
      </if>
      <if test="spouseNamePinyin != null" >
        spouse_name_pinyin,
      </if>
      <if test="relKeyword != null" >
        rel_keyword,
      </if>
      <if test="memberSurname != null" >
        member_surname,
      </if>
      <if test="memberName != null" >
        member_name,
      </if>
      <if test="memberNamePinyin != null" >
        member_name_pinyin,
      </if>
      <if test="memberGender != null" >
        member_gender,
      </if>
      <if test="memberDetail != null" >
        member_detail,
      </if>
      <if test="nativePlace != null" >
        native_place,
      </if>
      <if test="memberStory != null" >
        member_story,
      </if>
      <if test="generationNum != null" >
        generation_num,
      </if>
      <if test="orderNo != null" >
        order_no,
      </if>
      <if test="secPersonalName != null" >
        sec_personal_name,
      </if>
      <if test="mark != null" >
        mark,
      </if>
      <if test="generationWord != null" >
        generation_word,
      </if>
      <if test="birthdayTime != null" >
        birthday_time,
      </if>
      <if test="deathdayTime != null" >
        deathday_time,
      </if>
      <if test="buriedLocation != null" >
        buried_location,
      </if>
      <if test="son != null" >
        son,
      </if>
      <if test="daughter != null" >
        daughter,
      </if>
      <if test="ranking != null" >
        ranking,
      </if>
      <if test="preRelationList != null" >
        pre_relation_list,
      </if>
      <if test="postRelationList != null" >
        post_relation_list,
      </if>
      <if test="relFlag != null" >
        rel_flag,
      </if>
      <if test="payFlag != null" >
        pay_flag,
      </if>
      <if test="auditFlag != null" >
        audit_flag,
      </if>
      <if test="subFamilyFlag != null" >
        sub_family_flag,
      </if>
      <if test="subFamilyCode != null" >
        sub_family_code,
      </if>
      <if test="householdInFlag != null" >
        household_in_flag,
      </if>
      <if test="householdInTime != null" >
        household_in_time,
      </if>
      <if test="source != null" >
        source,
      </if>
      <if test="versionSource != null" >
        version_source,
      </if>
      <if test="versionId != null" >
        version_id,
      </if>
      <if test="versionMemberId != null" >
        version_member_id,
      </if>
      <if test="birthdateType != null" >
        birthdate_type,
      </if>
      <if test="relativeFlag != null" >
        relative_flag,
      </if>
      <if test="addressDetail != null" >
        address_detail,
      </if>
      <if test="adoptout != null" >
        adoptout,
      </if>
      <if test="adoptoutDetail != null" >
        adoptout_detail,
      </if>
      <if test="uxorilocal != null" >
        uxorilocal,
      </if>
      <if test="uxorilocalDetail != null" >
        uxorilocal_detail,
      </if>
      <if test="soninlaw != null" >
        soninlaw,
      </if>
      <if test="soninlawDetail != null" >
        soninlaw_detail,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="toLocate != null" >
        to_locate,
      </if>
      <if test="sonNum != null" >
        son_num,
      </if>
      <if test="sonNumReal != null" >
        son_num_real,
      </if>
      <if test="relErrorFlag != null" >
        rel_error_flag,
      </if>
      <if test="sonNumDiff != null" >
        son_num_diff,
      </if>
      <if test="alreadyExist != null" >
        already_exist,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="familyId != null" >
        #{familyId,jdbcType=INTEGER},
      </if>
      <if test="bookId != null" >
        #{bookId,jdbcType=INTEGER},
      </if>
      <if test="volumeId != null" >
        #{volumeId,jdbcType=INTEGER},
      </if>
      <if test="subClanId != null" >
        #{subClanId,jdbcType=INTEGER},
      </if>
      <if test="familyMemberCode != null" >
        #{familyMemberCode,jdbcType=VARCHAR},
      </if>
      <if test="fatherName != null" >
        #{fatherName,jdbcType=VARCHAR},
      </if>
      <if test="spouseName != null" >
        #{spouseName,jdbcType=VARCHAR},
      </if>
      <if test="fatherNamePinyin != null" >
        #{fatherNamePinyin,jdbcType=VARCHAR},
      </if>
      <if test="spouseNamePinyin != null" >
        #{spouseNamePinyin,jdbcType=VARCHAR},
      </if>
      <if test="relKeyword != null" >
        #{relKeyword,jdbcType=VARCHAR},
      </if>
      <if test="memberSurname != null" >
        #{memberSurname,jdbcType=VARCHAR},
      </if>
      <if test="memberName != null" >
        #{memberName,jdbcType=VARCHAR},
      </if>
      <if test="memberNamePinyin != null" >
        #{memberNamePinyin,jdbcType=VARCHAR},
      </if>
      <if test="memberGender != null" >
        #{memberGender,jdbcType=INTEGER},
      </if>
      <if test="memberDetail != null" >
        #{memberDetail,jdbcType=VARCHAR},
      </if>
      <if test="nativePlace != null" >
        #{nativePlace,jdbcType=VARCHAR},
      </if>
      <if test="memberStory != null" >
        #{memberStory,jdbcType=VARCHAR},
      </if>
      <if test="generationNum != null" >
        #{generationNum,jdbcType=INTEGER},
      </if>
      <if test="orderNo != null" >
        #{orderNo,jdbcType=INTEGER},
      </if>
      <if test="secPersonalName != null" >
        #{secPersonalName,jdbcType=VARCHAR},
      </if>
      <if test="mark != null" >
        #{mark,jdbcType=VARCHAR},
      </if>
      <if test="generationWord != null" >
        #{generationWord,jdbcType=VARCHAR},
      </if>
      <if test="birthdayTime != null" >
        #{birthdayTime,jdbcType=VARCHAR},
      </if>
      <if test="deathdayTime != null" >
        #{deathdayTime,jdbcType=VARCHAR},
      </if>
      <if test="buriedLocation != null" >
        #{buriedLocation,jdbcType=VARCHAR},
      </if>
      <if test="son != null" >
        #{son,jdbcType=VARCHAR},
      </if>
      <if test="daughter != null" >
        #{daughter,jdbcType=VARCHAR},
      </if>
      <if test="ranking != null" >
        #{ranking,jdbcType=INTEGER},
      </if>
      <if test="preRelationList != null" >
        #{preRelationList,jdbcType=VARCHAR},
      </if>
      <if test="postRelationList != null" >
        #{postRelationList,jdbcType=VARCHAR},
      </if>
      <if test="relFlag != null" >
        #{relFlag,jdbcType=INTEGER},
      </if>
      <if test="payFlag != null" >
        #{payFlag,jdbcType=INTEGER},
      </if>
      <if test="auditFlag != null" >
        #{auditFlag,jdbcType=INTEGER},
      </if>
      <if test="subFamilyFlag != null" >
        #{subFamilyFlag,jdbcType=INTEGER},
      </if>
      <if test="subFamilyCode != null" >
        #{subFamilyCode,jdbcType=VARCHAR},
      </if>
      <if test="householdInFlag != null" >
        #{householdInFlag,jdbcType=INTEGER},
      </if>
      <if test="householdInTime != null" >
        #{householdInTime,jdbcType=VARCHAR},
      </if>
      <if test="source != null" >
        #{source,jdbcType=INTEGER},
      </if>
      <if test="versionSource != null" >
        #{versionSource,jdbcType=INTEGER},
      </if>
      <if test="versionId != null" >
        #{versionId,jdbcType=INTEGER},
      </if>
      <if test="versionMemberId != null" >
        #{versionMemberId,jdbcType=INTEGER},
      </if>
      <if test="birthdateType != null" >
        #{birthdateType,jdbcType=INTEGER},
      </if>
      <if test="relativeFlag != null" >
        #{relativeFlag,jdbcType=INTEGER},
      </if>
      <if test="addressDetail != null" >
        #{addressDetail,jdbcType=VARCHAR},
      </if>
      <if test="adoptout != null" >
        #{adoptout,jdbcType=INTEGER},
      </if>
      <if test="adoptoutDetail != null" >
        #{adoptoutDetail,jdbcType=VARCHAR},
      </if>
      <if test="uxorilocal != null" >
        #{uxorilocal,jdbcType=INTEGER},
      </if>
      <if test="uxorilocalDetail != null" >
        #{uxorilocalDetail,jdbcType=VARCHAR},
      </if>
      <if test="soninlaw != null" >
        #{soninlaw,jdbcType=INTEGER},
      </if>
      <if test="soninlawDetail != null" >
        #{soninlawDetail,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="toLocate != null" >
        #{toLocate,jdbcType=INTEGER},
      </if>
      <if test="sonNum != null" >
        #{sonNum,jdbcType=INTEGER},
      </if>
      <if test="sonNumReal != null" >
        #{sonNumReal,jdbcType=INTEGER},
      </if>
      <if test="relErrorFlag != null" >
        #{relErrorFlag,jdbcType=INTEGER},
      </if>
      <if test="sonNumDiff != null" >
        #{sonNumDiff,jdbcType=INTEGER},
      </if>
      <if test="alreadyExist != null" >
        #{alreadyExist,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.dlm.hmp.pojo.FamilyMemberExample" resultType="java.lang.Integer" >
    select count(*) from family_member
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByPrimaryKeySelective" parameterType="com.dlm.hmp.pojo.FamilyMember" >
    update family_member
    <set >
      <if test="familyId != null" >
        family_id = #{familyId,jdbcType=INTEGER},
      </if>
      <if test="bookId != null" >
        book_id = #{bookId,jdbcType=INTEGER},
      </if>
      <if test="volumeId != null" >
        volume_id = #{volumeId,jdbcType=INTEGER},
      </if>
      <if test="subClanId != null" >
        sub_clan_id = #{subClanId,jdbcType=INTEGER},
      </if>
      <if test="familyMemberCode != null" >
        family_member_code = #{familyMemberCode,jdbcType=VARCHAR},
      </if>
      <if test="fatherName != null" >
        father_name = #{fatherName,jdbcType=VARCHAR},
      </if>
      <if test="spouseName != null" >
        spouse_name = #{spouseName,jdbcType=VARCHAR},
      </if>
      <if test="fatherNamePinyin != null" >
        father_name_pinyin = #{fatherNamePinyin,jdbcType=VARCHAR},
      </if>
      <if test="spouseNamePinyin != null" >
        spouse_name_pinyin = #{spouseNamePinyin,jdbcType=VARCHAR},
      </if>
      <if test="relKeyword != null" >
        rel_keyword = #{relKeyword,jdbcType=VARCHAR},
      </if>
      <if test="memberSurname != null" >
        member_surname = #{memberSurname,jdbcType=VARCHAR},
      </if>
      <if test="memberName != null" >
        member_name = #{memberName,jdbcType=VARCHAR},
      </if>
      <if test="memberNamePinyin != null" >
        member_name_pinyin = #{memberNamePinyin,jdbcType=VARCHAR},
      </if>
      <if test="memberGender != null" >
        member_gender = #{memberGender,jdbcType=INTEGER},
      </if>
      <if test="memberDetail != null" >
        member_detail = #{memberDetail,jdbcType=VARCHAR},
      </if>
      <if test="nativePlace != null" >
        native_place = #{nativePlace,jdbcType=VARCHAR},
      </if>
      <if test="memberStory != null" >
        member_story = #{memberStory,jdbcType=VARCHAR},
      </if>
      <if test="generationNum != null" >
        generation_num = #{generationNum,jdbcType=INTEGER},
      </if>
      <if test="orderNo != null" >
        order_no = #{orderNo,jdbcType=INTEGER},
      </if>
      <if test="secPersonalName != null" >
        sec_personal_name = #{secPersonalName,jdbcType=VARCHAR},
      </if>
      <if test="mark != null" >
        mark = #{mark,jdbcType=VARCHAR},
      </if>
      <if test="generationWord != null" >
        generation_word = #{generationWord,jdbcType=VARCHAR},
      </if>
      <if test="birthdayTime != null" >
        birthday_time = #{birthdayTime,jdbcType=VARCHAR},
      </if>
      <if test="deathdayTime != null" >
        deathday_time = #{deathdayTime,jdbcType=VARCHAR},
      </if>
      <if test="buriedLocation != null" >
        buried_location = #{buriedLocation,jdbcType=VARCHAR},
      </if>
      <if test="son != null" >
        son = #{son,jdbcType=VARCHAR},
      </if>
      <if test="daughter != null" >
        daughter = #{daughter,jdbcType=VARCHAR},
      </if>
      <if test="ranking != null" >
        ranking = #{ranking,jdbcType=INTEGER},
      </if>
      <if test="preRelationList != null" >
        pre_relation_list = #{preRelationList,jdbcType=VARCHAR},
      </if>
      <if test="postRelationList != null" >
        post_relation_list = #{postRelationList,jdbcType=VARCHAR},
      </if>
      <if test="relFlag != null" >
        rel_flag = #{relFlag,jdbcType=INTEGER},
      </if>
      <if test="payFlag != null" >
        pay_flag = #{payFlag,jdbcType=INTEGER},
      </if>
      <if test="auditFlag != null" >
        audit_flag = #{auditFlag,jdbcType=INTEGER},
      </if>
      <if test="subFamilyFlag != null" >
        sub_family_flag = #{subFamilyFlag,jdbcType=INTEGER},
      </if>
      <if test="subFamilyCode != null" >
        sub_family_code = #{subFamilyCode,jdbcType=VARCHAR},
      </if>
      <if test="householdInFlag != null" >
        household_in_flag = #{householdInFlag,jdbcType=INTEGER},
      </if>
      <if test="householdInTime != null" >
        household_in_time = #{householdInTime,jdbcType=VARCHAR},
      </if>
      <if test="source != null" >
        source = #{source,jdbcType=INTEGER},
      </if>
      <if test="versionSource != null" >
        version_source = #{versionSource,jdbcType=INTEGER},
      </if>
      <if test="versionId != null" >
        version_id = #{versionId,jdbcType=INTEGER},
      </if>
      <if test="versionMemberId != null" >
        version_member_id = #{versionMemberId,jdbcType=INTEGER},
      </if>
      <if test="birthdateType != null" >
        birthdate_type = #{birthdateType,jdbcType=INTEGER},
      </if>
      <if test="relativeFlag != null" >
        relative_flag = #{relativeFlag,jdbcType=INTEGER},
      </if>
      <if test="addressDetail != null" >
        address_detail = #{addressDetail,jdbcType=VARCHAR},
      </if>
      <if test="adoptout != null" >
        adoptout = #{adoptout,jdbcType=INTEGER},
      </if>
      <if test="adoptoutDetail != null" >
        adoptout_detail = #{adoptoutDetail,jdbcType=VARCHAR},
      </if>
      <if test="uxorilocal != null" >
        uxorilocal = #{uxorilocal,jdbcType=INTEGER},
      </if>
      <if test="uxorilocalDetail != null" >
        uxorilocal_detail = #{uxorilocalDetail,jdbcType=VARCHAR},
      </if>
      <if test="soninlaw != null" >
        soninlaw = #{soninlaw,jdbcType=INTEGER},
      </if>
      <if test="soninlawDetail != null" >
        soninlaw_detail = #{soninlawDetail,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="toLocate != null" >
        to_locate = #{toLocate,jdbcType=INTEGER},
      </if>
      <if test="sonNum != null" >
        son_num = #{sonNum,jdbcType=INTEGER},
      </if>
      <if test="sonNumReal != null" >
        son_num_real = #{sonNumReal,jdbcType=INTEGER},
      </if>
      <if test="relErrorFlag != null" >
        rel_error_flag = #{relErrorFlag,jdbcType=INTEGER},
      </if>
      <if test="sonNumDiff != null" >
        son_num_diff = #{sonNumDiff,jdbcType=INTEGER},
      </if>
      <if test="alreadyExist != null" >
        already_exist = #{alreadyExist,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.dlm.hmp.pojo.FamilyMember" >
    update family_member
    set family_id = #{familyId,jdbcType=INTEGER},
      book_id = #{bookId,jdbcType=INTEGER},
      volume_id = #{volumeId,jdbcType=INTEGER},
      sub_clan_id = #{subClanId,jdbcType=INTEGER},
      family_member_code = #{familyMemberCode,jdbcType=VARCHAR},
      father_name = #{fatherName,jdbcType=VARCHAR},
      spouse_name = #{spouseName,jdbcType=VARCHAR},
      father_name_pinyin = #{fatherNamePinyin,jdbcType=VARCHAR},
      spouse_name_pinyin = #{spouseNamePinyin,jdbcType=VARCHAR},
      rel_keyword = #{relKeyword,jdbcType=VARCHAR},
      member_surname = #{memberSurname,jdbcType=VARCHAR},
      member_name = #{memberName,jdbcType=VARCHAR},
      member_name_pinyin = #{memberNamePinyin,jdbcType=VARCHAR},
      member_gender = #{memberGender,jdbcType=INTEGER},
      member_detail = #{memberDetail,jdbcType=VARCHAR},
      native_place = #{nativePlace,jdbcType=VARCHAR},
      member_story = #{memberStory,jdbcType=VARCHAR},
      generation_num = #{generationNum,jdbcType=INTEGER},
      order_no = #{orderNo,jdbcType=INTEGER},
      sec_personal_name = #{secPersonalName,jdbcType=VARCHAR},
      mark = #{mark,jdbcType=VARCHAR},
      generation_word = #{generationWord,jdbcType=VARCHAR},
      birthday_time = #{birthdayTime,jdbcType=VARCHAR},
      deathday_time = #{deathdayTime,jdbcType=VARCHAR},
      buried_location = #{buriedLocation,jdbcType=VARCHAR},
      son = #{son,jdbcType=VARCHAR},
      daughter = #{daughter,jdbcType=VARCHAR},
      ranking = #{ranking,jdbcType=INTEGER},
      pre_relation_list = #{preRelationList,jdbcType=VARCHAR},
      post_relation_list = #{postRelationList,jdbcType=VARCHAR},
      rel_flag = #{relFlag,jdbcType=INTEGER},
      pay_flag = #{payFlag,jdbcType=INTEGER},
      audit_flag = #{auditFlag,jdbcType=INTEGER},
      sub_family_flag = #{subFamilyFlag,jdbcType=INTEGER},
      sub_family_code = #{subFamilyCode,jdbcType=VARCHAR},
      household_in_flag = #{householdInFlag,jdbcType=INTEGER},
      household_in_time = #{householdInTime,jdbcType=VARCHAR},
      source = #{source,jdbcType=INTEGER},
      version_source = #{versionSource,jdbcType=INTEGER},
      version_id = #{versionId,jdbcType=INTEGER},
      version_member_id = #{versionMemberId,jdbcType=INTEGER},
      birthdate_type = #{birthdateType,jdbcType=INTEGER},
      relative_flag = #{relativeFlag,jdbcType=INTEGER},
      address_detail = #{addressDetail,jdbcType=VARCHAR},
      adoptout = #{adoptout,jdbcType=INTEGER},
      adoptout_detail = #{adoptoutDetail,jdbcType=VARCHAR},
      uxorilocal = #{uxorilocal,jdbcType=INTEGER},
      uxorilocal_detail = #{uxorilocalDetail,jdbcType=VARCHAR},
      soninlaw = #{soninlaw,jdbcType=INTEGER},
      soninlaw_detail = #{soninlawDetail,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      to_locate = #{toLocate,jdbcType=INTEGER},
      son_num = #{sonNum,jdbcType=INTEGER},
      son_num_real = #{sonNumReal,jdbcType=INTEGER},
      rel_error_flag = #{relErrorFlag,jdbcType=INTEGER},
      son_num_diff = #{sonNumDiff,jdbcType=INTEGER},
      already_exist = #{alreadyExist,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>